{"version":3,"sources":["services/persons.js","components/displayNames.js","components/filter.js","components/personForm.js","app.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newPerson","setErrorMessage","post","catch","error","concat","JSON","stringify","setTimeout","IDtoUpdate","personToUpdate","put","name","IDtoDelete","updatePersonsFromDb","window","confirm","delete","DisplayNames","_ref","persons","newFilterString","map","entry","i","toLowerCase","includes","react_default","a","createElement","key","number","onClick","personsService","id","Filter","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilterString","_useState9","_useState10","errorMessage","useEffect","message","className","filter","event","target","personForm","preventDefault","find","x","idToUpdate","console","log","toConsumableArray","displayNames","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.4c4cc027.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst updatePersons = ( newPerson, setErrorMessage ) => {\n  const request = axios.post(baseUrl, newPerson)\n                   .catch(error => {\n                     setErrorMessage(\n                       `${JSON.stringify(error.response.data.error)}`\n                     )\n                     setTimeout(() => {\n                      setErrorMessage(null)\n                    }, 5000)\n                    return \"Error handled\"\n                    })\nreturn request.then(response => response.data)\n}\n\nconst updateExistingPerson = ( IDtoUpdate, personToUpdate, setErrorMessage ) => {\n  const request = axios.put(`${baseUrl}/${IDtoUpdate}`, personToUpdate)\n                  .catch(error => {\n                    setErrorMessage(\n                      `the information of '${personToUpdate.name}' was already deleted from the server`\n                    )\n                    setTimeout(() => {\n                      setErrorMessage(null)\n                    }, 3000)\n                    return \"Error handled\"\n                    })\n\n                  \n  return request.then(response => response.data)\n}\n\nconst deletePerson = ( IDtoDelete , name, updatePersonsFromDb) => {\n  if (window.confirm(`Delete ${name}?`)) {\n  const request = axios.delete(`${baseUrl}/${IDtoDelete}`)\n  return request.then(response => response.data).then(updatePersonsFromDb)\n}}\n\nexport default { getAll, updatePersons , updateExistingPerson, deletePerson }","import React from 'react'\nimport personsService from '../services/persons'\n\n  const DisplayNames = ({ persons, updatePersonsFromDb, newFilterString }) => persons.map((entry, i) => {\n      if (entry.name.toLowerCase().includes(newFilterString.toLowerCase())) {\n          return (\n          <p key={i}>{entry.name} {entry.number} <button onClick={() => personsService.deletePerson(entry.id, entry.name, updatePersonsFromDb)}>Delete</button></p>\n      )} else {\n          return (\"\")\n          }\n        }\n   )\n\nexport default DisplayNames","import React from 'react'\n\n const Filter = ({ newFilterString , handleFilterChange }) => (\n       <div>\n          filter shown with:  <input\n          value={newFilterString}\n          onChange={handleFilterChange}\n          />\n       </div>\n  )\n\n  export default Filter","import React from 'react'\n\nconst PersonForm = ({ addPerson , newName , handleNameChange , newNumber , handleNumberChange }) => (\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input\n          value={newName}\n          onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input\n          value={newNumber}\n          onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n)\nexport default PersonForm","import React, { useState, useEffect } from 'react'\nimport DisplayNames from './components/displayNames'\nimport Filter from './components/filter'\nimport PersonForm from './components/personForm'\nimport personsService from './services/persons'\nimport axios from 'axios'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilterString, setNewFilterString ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n      axios\n      .get('/api/persons')\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n\n  const addPerson = (event) => {\n      event.preventDefault()\n      if (typeof (persons.find(x => x.name === newName)) != \"undefined\") {\n\n      if (window.confirm(`${newName} already exists in the phonebook. Replace old number with new number?`)) {\n        const idToUpdate = persons.find(x => x.name === newName).id\n        personsService\n        .updateExistingPerson(idToUpdate, { name: newName, number: newNumber }, setErrorMessage)\n        .then(updatePersonsFromDb) \n        setErrorMessage(\n        `${newName} was updated in the phonebook`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n\n      } else {\n         console.log(\"Cancelled\")\n      }\n\n      } else {\n          setPersons([...persons, { name: newName, number: newNumber }], setErrorMessage)\n          personsService\n          .updatePersons({ name: newName, number: newNumber }, setErrorMessage)\n          .then(updatePersonsFromDb)\n          setErrorMessage(\n          `${newName} was added to the phonebook`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n      }\n  }\n\n  const handleFilterChange = (event) => {\n      setNewFilterString(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n  }\n\n  const updatePersonsFromDb = () => {\n    personsService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })}\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n    return null\n  } else if (message.includes(\"already deleted\")) {\n    \n    return (\n      <div className=\"error-red\">\n        {message}\n      </div>\n    )\n  }\n  \n  return (\n    <div className=\"error-green\">\n      {message}\n    </div>\n  )\n}\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage} />\n\n      <Filter newFilterString={newFilterString}  handleFilterChange={handleFilterChange} />\n\n      <h3>Add a new...</h3>\n\n      <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber}\n      handleNumberChange={handleNumberChange} />\n\n      <h2>Numbers</h2>\n\n      <DisplayNames persons={persons} updatePersonsFromDb={updatePersonsFromDb} newFilterString={newFilterString}/>\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}